
<ul>
  <li><a href="#introduction">1. Introduction</a></li>
  <ul>
    <li><a href="#features">1.1. Features</a></li>
  </ul>
  <li><a href="#new">2. New in this release</a></li>
  <ul>
    <li><a href="#newFeatures">2.1. New Features</a></li>
    <li><a href="#enhancements">2.2. Enhancements</a></li>
    <li><a href="#optimizations">2.3. Optimizations</a></li>
    <li><a href="#examples">2.4. Examples</a></li>
    <li><a href="#tools">2.5. Tools</a></li>
    <li><a href="#changes">2.6. API Changes</a></li>
    <li><a href="#documentation">2.7. Documentation</a></li>
    <li><a href="#bugfixes">2.8. Bug Fixes</a></li>
    <li><a href="#knownbugs">2.9. Known Bugs</a></li>
  </ul>
  <li><a href="#about">3. About</a></li>
  <ul>
    <li><a href="#os">3.1. Operating System Support</a></li>
    <li><a href="#ws">3.2. Window System Support</a></li>
    <li><a href="#documentation">3.3. Documentation</a></li>
    <li><a href="#support">3.4. Support</a></li>
  </ul>
  <li><a href="#errata">4. Errata</a></li>
</ul>

<a name="introduction"></a>
<h2>1. Introduction</h2>
<p>
  Welcome to Equalizer, the standard middleware to create and deploy parallel,
  scalable OpenGL applications. This release introduces major new features, most
  notably automatic configuration, the Sequel library, runtime reliability and
  tile compounds.
</p>
<p>
  Equalizer 1.2 is a feature release extending the 1.0 API, distilling over 6
  years of development and decades of experience into a feature-rich,
  high-performance and mature parallel rendering framework and an
  object-oriented high-level network library. It is intended for all application
  developers creating parallel, interactive OpenGL applications. Equalizer 1.2
  can be retrieved by downloading the
  <a href="http://www.equalizergraphics.com/downloads/Equalizer-1.2.tar.gz">source
    code</a> or one of the <a href="http://www.equalizergraphics.com/downloads/major.html#1.2">precompiled packages</a>.
</p>

<a name="features"></a>
<h3>1.1. Features</h3>
<p>
  Equalizer provides the following major features to facilitate the development
  and deployment of scalable OpenGL applications. A
  <a href="/features.html">detailed feature list</a> can be found on the
  Equalizer website.
</p>
<ul>
  <li><b>Runtime Configurability:</b> An Equalizer application is configured
    automatically or manually at runtime and can be deployed on laptops,
    multi-GPU workstations and large-scale visualization clusters without
    recompilation.</li>
  <li><b>Runtime Scalability:</b> An Equalizer application can benefit from
    multiple graphics cards, processors and computers to scale rendering
    performance, visual quality and display size.</li>
  <li><b>Distributed Execution:</b> Equalizer applications can be written to
    support cluster-based execution. Equalizer furnishes and uses the Collage
    network library, a cross-platform C++ library for building heterogenous,
    distributed applications.</li>
  <li><b>Support for Stereo and Immersive Environments:</b> Equalizer supports
    both active and passive stereo rendering, as well as head tracking and
    head-mounted displays used in immersive Virtual Reality installations.</li>
</ul>

<a name="new"></a>
<h2>2. New in this release</h2>
<p>
  Equalizer 1.2 contains the following features, enhancements, bug fixes
  and documentation changes:
</p>

<a name="newFeatures"></a>
<h3>2.1. New Features</h3>
<ul>
  <li><a href="http://www.equalizergraphics.com/build/documentation/user/configuration.html">Automatic
      local and remote configuration</a> using
      the <a href="http://www.equalizergraphics.com/gpu-sd">GPU-SD
      library</a></li>
  <li>Initial release
    of <a href="http://www.equalizergraphics.com/documents/Developer/API-1.2/sequel/namespaceseq.html">Sequel</a>,
    a simplification and utility layer on top of Equalizer, enabling rapid
    development of clustered multi-GPU applications</li>
  <li>Runtime failure tolerance detecting hardware and software failures</li>
  <li>Tile compounds for fill-limited rendering such as direct volume rendering
    and interactive raytracing</li>
</ul>
<ul>
  <li>Distributed single-producer, multi-consumer queue</li>
  <li>RDMA-based connection class for InfiniBand (Linux only)</li>
  <li>Support
    <a href="https://github.com/Eyescale/Equalizer/issues/28">push-based object
      distribution</a></li>
</ul>

<a name="enhancements"></a>
<h3>2.2. Enhancements</h3>
<ul>
  <li>Added FindEqualizer.cmake and FindCollage.cmake for integration of
    Equalizer and Collage in CMake build environments</li>
  <li>Support for render clients without listening sockets</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/24">Per-segment or
      per-canvas swap barriers</a></li>
  <li>Allow the image compressor to be chosen by the application</li>
  <li>Allow and prefer external GLEW installation during compilation</li>
  <li>Upgrade internal GLEW version to 1.7.0</li>
  <li>Implement EQ_WINDOW_IATTR_HINT_SWAPSYNC for GLX</li>
  <li>Add time member to eq::Event recording time when the event was received
    from the operating system</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/43">43</a>: Add
    View::isActive and Layout::isActive</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/45">45</a>: Make RNG
    functional without co::base::init</li>
  <li>Implement maximum size of multi-threaded queue, resulting in blocking push
    operations</li>
  <li>Extend co::base::SpinLock and ScopedMutex with read-write semantics</li>
  <li>Make Collage usable from multiple libraries by allowing init and exit to
    be called multiple times</li>
</ul>

<a name="optimizations"></a>
<h3>2.3. Optimizations</h3>
<ul>
  <li>Make LocalNode::registerObject and Object::commit parallelizable by
    executing object serialization from calling thread</li>
</ul>

<a name="examples"></a>
<h3>2.4. Examples</h3>
<ul>
  <li>Provide CMake files for installed examples</li>
  <li>seqPly: An new example similar to eqPly, but using the Sequel API</li>
  <li>eqAsync: A new example demonstrating OpenGL context sharing for
    asynchronously texture uploads</li>
  <li>eqHello: Ported to Sequel</li>
</ul>

<a name="tools"></a>
<h3>2.5. Tools</h3>
<ul>
  <li>No Changes</li>
</ul>

<a name="changes"></a>
<h3>2.6. API Changes</h3>
<p>
  The following API changes may impact existing applications:
</p>
<ul>
  <li>Removed co::Object::commitNB and commitSync since the commit request is no
    longer dispatched to command thread. Use commit instead.</li>
  <li>Moved installed client headers to eq/client. Applications should
    always use eq/eq.h instead of individual headers.</li>
  <li>Added a return value and timeout to co::LocalNode::acquireSendToken(),
    see method documentation.</li>
  <li>Changed 'uint32_t eq::Version::getRevision()' to 'std::string
    eq::Version::getRevision()'</li>
</ul>

<a name="documentation"></a>
<h3>2.7. Documentation</h3>
<p>
  The following documentation has been added or substantially improved since the
  last release:
</p>
<ul>
  <li>Full <a href="http://www.equalizergraphics.com/documents/Developer/API-1.2/index.html">API
      documentation</a> for the public Equalizer API.</li>
  <li>The <a href="http://www.equalizergraphics.com/survey.html">Programming and
      User Guide</a> has been extended to 107 pages and 60 figures.</li>
  <li><a href="/documents/design/tileCompounds.html">Tile compounds</a>
    using a pull-based task distribution for volume rendering and interactive
    raytracing.</li>
</ul>

<a name="bugfixes"></a>
<h3>2.8. Bug Fixes</h3>
<p>
  Equalizer 1.2 includes various bugfixes over the 1.0 release, including the
  following:
</p>
<ul>
  <li>RSP: Fix scattered ack implementation</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/29">29</a>: NV swap
    barrier with affinity context does not work</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/45">45</a>: Make
    co::base::RNG function without init()</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/56">56</a>: 
    Parsing configuration files is locale-dependent and fails in some
    locales</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/66">66</a>:
    Assertion when using the server for more than one session</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/73">73</a>:
    Missing space mouse support on Windows</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/82">82</a>:
    Excessive memory usage with object push</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/87">87</a>:
    Debian packages broken</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/88">88</a>:
    draw_sync thread model causes full synchronization</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/90">90</a>:
    Race condition with direct send and higher number of nodes</li>
</ul>

<a name="knownbugs"></a>
<h3>2.9. Known Bugs</h3>
<p>The following bugs were known at release time. Please file a
  <a href="https://github.com/Eyescale/Equalizer/issues">Bug Report</a> if you
  find any other issue with this release.
</p>
<ul>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/65">65</a>: Startup
    crash with Multi-GPU config</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/61">61</a>: VMMlib
    static initializer issue</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/58">58</a>:
    netperf/RDMA exit deadlock</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/49">49</a>:
    eqPixelBench crash with double free</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/19">19</a>: zoom
    readback with FBO</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/18">18</a>: zoom:
    depth readback does not work</li>
  <li><a href="https://github.com/Eyescale/Equalizer/issues/17">17</a>: AGL:
    Window close does not work</li>
</ul>

<a name="about"></a>
<h2>3. About</h2>
<p>
  Equalizer is a cross-platform toolkit, designed to run on any modern operating
  system, including all Unix variants and the Windows operating system. A 
  <a href="http://www.equalizergraphics.com/compatibility.html">compatibility
  matrix</a> can be found on the Equalizer website.
</p>
<p>
  Equalizer requires at least <a href="http://www.opengl.org">OpenGL 1.1</a>,
  but uses newer OpenGL features when available. Version 1.2 has been tested on:
</p>

<a name="os"></a>
<h3>3.1. Operating System Support</h3>
<p>
  Equalizer uses CMake to create a platform-specific build environment. The
  following platforms and build environments are tested:
</p>
<ul>
  <li><b>Linux:</b> Ubuntu 11.04, 11.10, RHEL 6.1 (Makefile, i386, x64)</li>
  <li><b>Windows:</b> XP and 7 (Visual Studio 2008, i386, x64)</li>
  <li><b>Mac OS X:</b> 10.6, 10.7 (Makefile, XCode, i386, x64)</li>
</ul>

<a name="ws"></a>
<h3>3.2. Window System Support</h3>
<ul>
  <li><b>X11:</b> Full support for all documented features.</li>
  <li><b>WGL:</b> Full support for all documented features.</li>
  <li><b>AGL:</b> Full support for all documented features.</li>
</ul>

<a name="documentation"></a>
<h3>3.3. Documentation</h3>
<p>
  The Programming and User Guide is available as a 
  <a href="http://www.lulu.com/product/paperback/equalizer-10-programming-and-user-guide/15165632">hard-copy</a>
  and <a href="http://www.equalizergraphics.com/survey.html">online</a>.
  The <a href="http://www.equalizergraphics.com/documents/Developer/API-1.2/index.html">API
    documentation</a> can be found on the Equalizer website.
</p>
<p>
  As with any open source project, the available source code, in particular the
  shipped
  <a href="https://github.com/Eyescale/Equalizer/tree/1.2/examples">examples</a>
  provide a reference for developing or porting applications. The
  <a href="http://www.equalizergraphics.com/doc_developer.html">Developer Documentation</a> on the website
  provides further design documents for specific features. XCode users can
  download
  a <a href="http://www.equalizergraphics.com/documents/Developer/API-1.2/ch.eyescale.Equalizer.docset.zip">Documentation
    Set</a>.
</p>

<a name="support"></a>
<h3>3.4. Support</h3>
<p>
  Technical questions can be posted to the 
  <a href="http://www.equalizergraphics.com/cgi-bin/mailman/listinfo/eq-dev">
    Developer Mailing List</a>, or directly to
  <a href="mailto:info@equalizergraphics.com?subject=Equalizer%20question">
    info@equalizergraphics.com</a>.
</p>
<p>
  Commercial support, custom software development and porting services are
  available from <a href="http://www.eyescale.ch">Eyescale</a>. Please contact
  <a href="mailto:info@eyescale.ch?subject=Equalizer%20support">info@eyescale.ch</a>
  for further information.
</p>

<a name="errata"></a>
<h2>4. Errata</h2>
<p></p>
